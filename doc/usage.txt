使い方
======

最低限の使い方
以下のPHPのプログラムで、MuMuを使うことができます。

<?php
// ライブラリ読み込み
require_once('mumu.php');
// テンプレートファイル読み込み
$t = MuParser::parse_from_file(テンプレートファイル名);
// テンプレートへの値の埋め込み、出力
echo $t->render(あてはめる値が入った配列);
?>
実例
例を挙げましょう。

まずは、テンプレートファイルというものを準備します。 そのテンプレートファイルを元に出力結果が生成されます。

例えば、テンプレートファイルをtemplate.htmlとしましょう。 その内容は、以下のとおりとします。

<html>
 <head><title>すらあど</title></head>
 <body>
  この広告は{{ client.name|escape }}が出稿していて、
  その担当者は{{ client.tantou_name|escape }}で、
  １クリックあたりの広告料は{{ moritapo|escape }}です。
 </body>
</html>
この時、テンプレートに値を当てはめて返すPHPのプログラムは以下のようになります。

<?php
require_once('mumu.php'); // ライブラリ読み込み
$t = MuParser::parse_from_file('template.html'); // テンプレートファイル読み込み
echo $t->render(array('moritapo' => '123',
                      'client' => array('name' => '未来検索ブラジル',
                                        'tantou_name' => '<ぐにゃら>')
                     )
               ); // テンプレートへの値の埋め込み、出力
?>
その出力結果は以下のようになります。

<html>
 <head><title>すらあど</title></head>
 <body>
  この広告は未来検索ブラジルが出稿していて、
  その担当者は&gt;ぐにゃら&lt;で、
  １クリックあたりの広告料は123です。
 </body>
</html>
ほら、カンタンでしょう？（by ボブ・ロス）

んで、テンプレートファイルってどうやって書くの？
テンプレートファイルの書き方を参考にしてください。

時間がない人向けのテンプレートファイルの書き方

こんな感じです。

{{ value }} : 値で置き換える
{{ value|filter }} : 値にフィルタをかけたもので置き換える。escapeとかurlencodeとかあるよ。
{% if cond %} {% else %} {% endif %} : condによって出力内容を変えます。
{% for val in vals %} {% endfor %} : valsの中身を一個ずつvalに取り出してループ出力します。
他に機能はあるの？
以下の機能があります。

キャッシュ機能
詳しくはプログラマ向けの話題を参照ください。
